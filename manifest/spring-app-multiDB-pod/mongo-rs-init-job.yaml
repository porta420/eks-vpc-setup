apiVersion: batch/v1
kind: Job
metadata:
  name: mongo-rs-init
spec:
  backoffLimit: 6
  template:
    spec:
      restartPolicy: OnFailure
      containers:
        - name: rs-init
          image: mongo:6
          env:
            - name: MONGO_INITDB_ROOT_USERNAME
              valueFrom:
                secretKeyRef:
                  name: mongo-root-secret
                  key: username
            - name: MONGO_INITDB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mongo-root-secret
                  key: password
          command:
            - sh
            - -c
            - |
              set -e

              # Wait for all 3 mongo pods to be Ready
              for i in 0 1 2; do
                echo "Waiting for mongo-$i..."
                until nc -z mongo-$i.mongo 27017; do sleep 3; done
              done

              # If already initiated, exit 0
              if mongosh --host mongo-0.mongo:27017 -u "$MONGO_INITDB_ROOT_USERNAME" -p "$MONGO_INITDB_ROOT_PASSWORD" --authenticationDatabase admin --quiet --eval 'rs.status().ok' | grep -q "1"; then
                echo "Replica set already initiated."
                exit 0
              fi

              echo "Initiating replica set..."
              mongosh --host mongo-0.mongo:27017 -u "$MONGO_INITDB_ROOT_USERNAME" -p "$MONGO_INITDB_ROOT_PASSWORD" --authenticationDatabase admin --quiet --eval '
                rs.initiate({
                  _id: "rs0",
                  members: [
                    { _id: 0, host: "mongo-0.mongo:27017" },
                    { _id: 1, host: "mongo-1.mongo:27017" },
                    { _id: 2, host: "mongo-2.mongo:27017" }
                  ]
                });
                rs.status();
              '
